FUNCTION "LGF_RandomReal" : Real
{ S7_Optimized_Access := 'TRUE' }
   VAR_INPUT 
      minValue : Real;
      maxValue : Real;
   END_VAR

   VAR_OUTPUT 
      error : Bool;
      statusID : UInt;
      status : Word;
   END_VAR

   VAR_TEMP 
      tempTime {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;
      tempTimeStatus : Int;
      tempRandomValue : UDInt;
      tempNormReal : Real;
   END_VAR

   VAR CONSTANT 
      NO_ERROR : Word := 16#0000;
      NO_CURRENT_JOBS : Word := 16#7000;
      MAX_LESS_MIN : Word := 16#8200;
      ERROR_IN_THIS_BLOCK : UInt := 1;
      ERROR_RD_SYS_T : UInt := 2;
      MIN_UDINT : UDInt := 0;
      MAX_UDINT : UDInt := 4294967295;
   END_VAR


BEGIN
	//=============================================================================
	// Siemens AG
	// (c)Copyright 2017
	//-----------------------------------------------------------------------------
	// Library:       LGF (Library General Functions)
	// Tested with:   CPU1212C DC/DC/DC FW:V4.2
	// Engineering:   TIA Portal V14 Update 1
	// Restrictions:  -
	// Requirements:  PLC (S7-1200 / S7-1500)
	// Functionality: This function generates random numbers in defined limits
	//                (Datatype Real)
	//-----------------------------------------------------------------------------
	// Change log table:
	// Version  Date        In charge / Changes applied
	// 01.00.00 19.08.2015  Siemens Industry Online Support
	//                      First released version
	// 01.00.01 02.01.2017  Siemens Industry Online Support
	//                      Upgrade: TIA Portal V14 Update 1
	// 01.00.02 02.03.2017  Siemens Industry Online Support
	//                      Bugfix: FC number
	//-----------------------------------------------------------------------------
	//Status Codes:
	// 16#7000:  No current jobs
	// 16#0000:  Job finished   // Note: There is no "Busy"-Status because the
	//           block is finished within a single cycle
	// 16#8200:  maxValue is samller then minValue 
	//=============================================================================
	
	//Set "No current job" status
	#error := false;
	#statusID := #ERROR_IN_THIS_BLOCK;
	#status := #NO_CURRENT_JOBS;
	
	//Check if the maximal Value is less than the minimal value
	IF (#minValue > #maxValue) THEN
	  #error := true;
	  #statusID := #ERROR_IN_THIS_BLOCK;
	  #status := #MAX_LESS_MIN;
	  #LGF_RandomReal := 0;
	  RETURN;
	END_IF;
	
	//Read system time
	#tempTimeStatus := RD_SYS_T(#tempTime);
	
	IF (#tempTimeStatus <> 0) THEN
	  #error := true;
	  #statusID := #ERROR_RD_SYS_T;
	  #status := INT_TO_WORD(#tempTimeStatus);
	  #LGF_RandomReal := 0;
	  RETURN;
	END_IF;
	
	//Callculate a random-start-value depending on the time
	#tempRandomValue.%B3 := #tempTime.NANOSECOND.%B0;
	#tempRandomValue.%B2 := #tempTime.NANOSECOND.%B1;
	#tempRandomValue.%B1 := #tempTime.NANOSECOND.%B2;
	#tempRandomValue.%B0 := #tempTime.NANOSECOND.%B3;
	
	//adapt the calculated random number to the given number span
	#tempNormReal := NORM_X(MIN := #MIN_UDINT, VALUE := #tempRandomValue, MAX := #MAX_UDINT);
	#LGF_RandomReal := SCALE_X(MIN := #minValue, VALUE := #tempNormReal, MAX := #maxValue);
	
	#status := #NO_ERROR;
END_FUNCTION

